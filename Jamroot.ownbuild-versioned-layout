path-constant TOP : . ;
include $(TOP)/../boost-version.jam ;

rule boost-libraries ( libs * )
{
    local dll-targets = ;
    for local curlib in $(libs) {
        local name = [ MATCH "^boost-(.*)" : $(curlib) ] ;
        local dll-target = "$(curlib)-dll" ;
        dll-targets += $(dll-target) ;

        local prefix = boost/1_$(BOOST_VERSION_MAJOR)_$(BOOST_VERSION_MINOR) ;
        local libfile = "lib/libboost_$(name).so" ;
        local suffix = ".1.$(BOOST_VERSION_MAJOR).$(BOOST_VERSION_MINOR)" ;

        for tool in gcc clang {
            for var in debug release {
                lib $(dll-target) :  :
                    <file>$(prefix)/$(tool)/$(var)/$(libfile)$(suffix)
                    <variant>$(var) <toolset>$(tool) ;
            }
            lib $(dll-target) : :
                    <file>$(prefix)/$(tool)/debug/$(libfile)$(suffix)
                    <variant>werror <toolset>$(tool) ;
        }
    }

    install ../dist/bin : $(dll-targets) : <install-dependencies>on ;
}

boost-libraries
        boost-atomic
        boost-chrono
        boost-context
        boost-coroutine
        boost-date_time
        boost-filesystem
        boost-graph
        boost-iostreams
        boost-math_c99
        boost-math_c99f
        boost-math_c99l
        boost-math_tr1
        boost-math_tr1f
        boost-math_tr1l
        boost-prg_exec_monitor
        boost-program_options
        boost-python
        boost-regex
        boost-serialization
        boost-signals
        boost-system
        boost-thread
        boost-unit_test_framework
        boost-wave
        boost-wserialization
    ;
